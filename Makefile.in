prefix = @prefix@
datadir = @datadir@
lispdir = @lispdir@
srcdir = @srcdir@

@SET_MAKE@
EMACS = @EMACS@
XEMACS = @XEMACS@
PACKAGEDIR = @PACKAGEDIR@

all: lick info

all-ja: lick info info-ja

lick:
	cd lisp && $(MAKE) EMACS="$(EMACS)" lispdir="$(lispdir)" all

install: install-lisp install-info

install-ja: install-lisp install-info install-info-ja

install-lisp:
	cd lisp && $(MAKE) EMACS="$(EMACS)" lispdir="$(lispdir)" install

install-info:
	cd texi && $(MAKE) EMACS="$(EMACS)" install

install-info-ja:
	cd texi && $(MAKE) EMACS="$(EMACS)" install-ja

# Rule for XEmacs package.
package: xlick xinfo
	cd lisp && $(MAKE) EMACS="$(XEMACS)" package

install-package: xinfo
	cd lisp && $(MAKE) EMACS="$(XEMACS)" PACKAGEDIR="$(PACKAGEDIR)" \
		install-package

package-ja: xlick xinfo xinfo-ja
	cd lisp && $(MAKE) EMACS="$(XEMACS)" package

install-package-ja: xinfo xinfo-ja
	cd lisp && $(MAKE) EMACS="$(XEMACS)" PACKAGEDIR="$(PACKAGEDIR)" \
		install-package

xlick:
	cd lisp && $(MAKE) EMACS="$(XEMACS)" lispdir="$(lispdir)" all

xinfo:
	cd texi && $(MAKE) EMACS="$(XEMACS)" all-info

xinfo-ja:
	cd texi && $(MAKE) EMACS="$(XEMACS)" ja-info

# Rule for Lars and nobody else.
some:
	cd lisp && $(MAKE) EMACS="$(EMACS)" some
l:
	cd lisp && $(MAKE) EMACS="$(EMACS)" clever

info:
	cd texi && $(MAKE) EMACS="$(EMACS)" all

info-ja:
	cd texi && $(MAKE) EMACS=$(EMACS) ja

clean:
	rm -f */*.orig */*.rej *.orig *.rej
	rm -f MANIFEST.*
	for i in lisp texi; do (cd $$i; $(MAKE) clean); done

elclean:
	cd lisp && rm -f *.elc auto-autoloads.el custom-load.el

x:
	$(MAKE) EMACS="$(XEMACS)"

xsome:
	$(MAKE) EMACS="$(XEMACS)" some

distclean: clean
	rm -rf *~
	for i in lisp texi; do (cd $$i; $(MAKE) distclean); done
	rm -f config.log config.status config.cache Makefile

config.status: $(srcdir)/configure
	$(SHELL) ./config.status --recheck
$(srcdir)/configure: $(srcdir)/configure.in
	cd $(srcdir) && autoconf
Makefile: $(srcdir)/Makefile.in config.status
	CONFIG_FILES=$@ CONFIG_HEADERS= $(SHELL) ./config.status

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
